CREATE TABLE [User] (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Role VARCHAR(50) NOT NULL
);

ALTER TABLE [User]
ADD CONSTRAINT CHK_User_Role CHECK (Role IN ('Student', 'Admin'));

CREATE TABLE Department (
    DepartmentID INT IDENTITY(1,1) PRIMARY KEY,
    DepartmentName VARCHAR(100) NOT NULL
);

CREATE TABLE Status (
    StatusID INT IDENTITY(1,1) PRIMARY KEY,
    StatusName VARCHAR(50) NOT NULL
);

CREATE TABLE Complaint (
    ComplaintID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    DepartmentID INT NOT NULL,
    StatusID INT NOT NULL,
    Title VARCHAR(150) NOT NULL,
    Description VARCHAR(MAX),
    Timestamp DATETIME DEFAULT GETDATE(),
    Priority VARCHAR(50),
    CONSTRAINT FK_Complaint_User FOREIGN KEY (UserID) REFERENCES [User](UserID),
    CONSTRAINT FK_Complaint_Department FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
    CONSTRAINT FK_Complaint_Status FOREIGN KEY (StatusID) REFERENCES Status(StatusID)
);

ALTER TABLE Complaint
ADD CONSTRAINT CHK_Complaint_Priority CHECK (Priority IN ('High', 'Medium', 'Low'));

CREATE TABLE EscalationLog (
    LogID INT IDENTITY(1,1) PRIMARY KEY,
    ComplaintID INT NOT NULL,
    EscalatedAt DATETIME DEFAULT GETDATE(),
    PreviousStatusID INT,
    NewStatusID INT,
    CONSTRAINT FK_EscalationLog_Complaint FOREIGN KEY (ComplaintID) REFERENCES Complaint(ComplaintID),
    CONSTRAINT FK_EscalationLog_PrevStatus FOREIGN KEY (PreviousStatusID) REFERENCES Status(StatusID),
    CONSTRAINT FK_EscalationLog_NewStatus FOREIGN KEY (NewStatusID) REFERENCES Status(StatusID)
);

CREATE INDEX IX_Complaint_UserID ON Complaint(UserID);
CREATE INDEX IX_Complaint_DepartmentID ON Complaint(DepartmentID);
CREATE INDEX IX_Complaint_StatusID ON Complaint(StatusID);
CREATE INDEX IX_EscalationLog_ComplaintID ON EscalationLog(ComplaintID);
